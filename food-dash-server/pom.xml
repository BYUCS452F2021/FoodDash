<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.5.4</version> <!-- Update Spring Boot Version here -->
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<groupId>edu.byu.cs452.fooddash</groupId>
	<artifactId>food-dash-server</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>food-dash-server</name>
	<description>Spring Boot Server for BYU CS452 Project: FoodDash</description>

	<properties>
		<java.version>11</java.version>

		<!-- Update Other Spring Dependencies here when Spring Boot Parent updates -->
		<!-- https://github.com/springdoc/springdoc-openapi/releases -->
		<spring.openapi.version>1.5.10</spring.openapi.version>
		<!-- https://github.com/spring-cloud/spring-cloud-release/releases -->
		<spring.cloud.version>2020.0.3</spring.cloud.version>
		<!-- https://github.com/spring-cloud/spring-cloud-gcp/releases -->
		<spring.cloud.gcp.version>2.0.4</spring.cloud.gcp.version>

		<!-- Google dependencies -->
		<appengine.plugin.version>2.4.1</appengine.plugin.version>
		<gcp.sql.connector.version>1.3.3</gcp.sql.connector.version>
		<firebase.admin.version>8.1.0</firebase.admin.version>

		<!-- Other build plugin dependencies-->
		<jacoco.version>0.8.6</jacoco.version>
		<git-code-format-maven-plugin.version>3.1</git-code-format-maven-plugin.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring.cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.google.cloud</groupId>
				<artifactId>spring-cloud-gcp-dependencies</artifactId>
				<version>${spring.cloud.gcp.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springdoc</groupId>
				<artifactId>springdoc-openapi</artifactId>
				<version>${spring.openapi.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>

		<!-- Persistance Technology Dependencies -->
		<dependency>
			<groupId>com.google.cloud</groupId>
			<artifactId>spring-cloud-gcp-starter-secretmanager</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-r2dbc</artifactId>
		</dependency>
		<dependency>
			<groupId>io.r2dbc</groupId>
			<artifactId>r2dbc-postgresql</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.cloud.sql</groupId>
			<artifactId>cloud-sql-connector-r2dbc-postgres</artifactId>
			<version>${gcp.sql.connector.version}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/name.nkonev.r2dbc-migrate/r2dbc-migrate-spring-boot-starter -->
		<dependency>
			<groupId>name.nkonev.r2dbc-migrate</groupId>
			<artifactId>r2dbc-migrate-spring-boot-starter</artifactId>
			<version>1.7.0</version>
		</dependency>

		<!-- Spring Web Dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<!-- Spring Security Dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-oauth2-resource-server</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.firebase</groupId>
			<artifactId>firebase-admin</artifactId>
			<version>${firebase.admin.version}</version>
		</dependency>

		<!-- Swagger Web Documentation Dependencies-->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-webflux-ui</artifactId>
			<version>${spring.openapi.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-security</artifactId>
			<version>${spring.openapi.version}</version>
		</dependency>
		<dependency>
			<groupId>io.swagger.core.v3</groupId>
			<artifactId>swagger-annotations</artifactId>
		</dependency>

		<!-- Other Project Dependencies -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- Test Dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.projectreactor</groupId>
			<artifactId>reactor-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.google.cloud.tools</groupId>
				<artifactId>appengine-maven-plugin</artifactId>
				<version>${appengine.plugin.version}</version>
				<configuration>
					<version>1</version>
					<projectId>GCLOUD_CONFIG</projectId>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.cosium.code</groupId>
				<artifactId>git-code-format-maven-plugin</artifactId>
				<version>${git-code-format-maven-plugin.version}</version>
				<configuration>
					<googleJavaFormatOptions>
					  <aosp>false</aosp>
					</googleJavaFormatOptions>
				  </configuration>
				<executions>
				  <!-- On commit, format the modified java files -->
				  <execution>
					<id>install-formatter-hook</id>
					<goals>
					  <goal>install-hooks</goal>
					</goals>
				  </execution>
				  <!-- On Maven verify phase, fail if any file
				  (including unmodified) is badly formatted -->
				  <execution>
					<id>validate-code-format</id>
					<goals>
					  <goal>validate-code-format</goal>
					</goals>
				  </execution>
				</executions>
			  </plugin>
		</plugins>
	</build>
</project>